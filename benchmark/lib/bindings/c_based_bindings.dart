// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_import

import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

// Auto-generated initialization code.

final ffi.Pointer<T> Function<T extends ffi.NativeType>(String sym) jniLookup =
    ProtectedJniExtensions.initGeneratedLibrary("benchmark_functions");

/// from: com.github.dart_lang.jnigen.benchmark.MainActivity
class MainActivity extends jni.JniObject {
  MainActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "MainActivity__ctor")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  MainActivity() : super.fromRef(_ctor().object);

  static final _configureFlutterEngine = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "MainActivity__configureFlutterEngine")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine flutterEngine)
  void configureFlutterEngine(jni.JniObject flutterEngine) =>
      _configureFlutterEngine(reference, flutterEngine.reference).check();

  static final _getInteger =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "MainActivity__getInteger")
          .asFunction<jni.JniResult Function()>();

  /// from: static public int getInteger()
  static int getInteger() => _getInteger().integer;

  static final _getStringOfLength =
      jniLookup<ffi.NativeFunction<jni.JniResult Function(ffi.Int32)>>(
              "MainActivity__getStringOfLength")
          .asFunction<jni.JniResult Function(int)>();

  /// from: static public java.lang.String getStringOfLength(int n)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JniString getStringOfLength(int n) =>
      jni.JniString.fromRef(_getStringOfLength(n).object);

  static final _getOrigin =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "MainActivity__getOrigin")
          .asFunction<jni.JniResult Function()>();

  /// from: static public com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate getOrigin()
  /// The returned object must be deleted after use, by calling the `delete` method.
  static MainActivity_Coordinate getOrigin() =>
      MainActivity_Coordinate.fromRef(_getOrigin().object);

  static final _getMidPoint = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("MainActivity__getMidPoint")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate getMidPoint(com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate a, com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate b)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static MainActivity_Coordinate getMidPoint(
          MainActivity_Coordinate a, MainActivity_Coordinate b) =>
      MainActivity_Coordinate.fromRef(
          _getMidPoint(a.reference, b.reference).object);

  static final _toUpperCase = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>)>>("MainActivity__toUpperCase")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.String toUpperCase(java.lang.String text)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JniString toUpperCase(jni.JniString text) =>
      jni.JniString.fromRef(_toUpperCase(text.reference).object);

  static final _max = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("MainActivity__max")
      .asFunction<
          jni.JniResult Function(int, int, int, int, int, int, int, int)>();

  /// from: static public int max(int a, int b, int c, int d, int e, int f, int g, int h)
  static int max(int a, int b, int c, int d, int e, int f, int g, int h) =>
      _max(a, b, c, d, e, f, g, h).integer;
}

/// from: com.github.dart_lang.jnigen.benchmark.MainActivity$Coordinate
class MainActivity_Coordinate extends jni.JniObject {
  MainActivity_Coordinate.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _get_x = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
    jni.JObject,
  )>>("get_MainActivity_Coordinate__x")
      .asFunction<
          jni.JniResult Function(
    jni.JObject,
  )>();

  /// from: public int x
  int get x => _get_x(reference).integer;
  static final _set_x = jniLookup<
          ffi.NativeFunction<
              jni.JThrowable Function(
                  jni.JObject, ffi.Int32)>>("set_MainActivity_Coordinate__x")
      .asFunction<jni.JThrowable Function(jni.JObject, int)>();

  /// from: public int x
  set x(int value) => _set_x(reference, value);

  static final _get_y = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
    jni.JObject,
  )>>("get_MainActivity_Coordinate__y")
      .asFunction<
          jni.JniResult Function(
    jni.JObject,
  )>();

  /// from: public int y
  int get y => _get_y(reference).integer;
  static final _set_y = jniLookup<
          ffi.NativeFunction<
              jni.JThrowable Function(
                  jni.JObject, ffi.Int32)>>("set_MainActivity_Coordinate__y")
      .asFunction<jni.JThrowable Function(jni.JObject, int)>();

  /// from: public int y
  set y(int value) => _set_y(reference, value);

  static final _get_z = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
    jni.JObject,
  )>>("get_MainActivity_Coordinate__z")
      .asFunction<
          jni.JniResult Function(
    jni.JObject,
  )>();

  /// from: public int z
  int get z => _get_z(reference).integer;
  static final _set_z = jniLookup<
          ffi.NativeFunction<
              jni.JThrowable Function(
                  jni.JObject, ffi.Int32)>>("set_MainActivity_Coordinate__z")
      .asFunction<jni.JThrowable Function(jni.JObject, int)>();

  /// from: public int z
  set z(int value) => _set_z(reference, value);

  static final _ctor = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Int32, ffi.Int32,
                  ffi.Int32)>>("MainActivity_Coordinate__ctor")
      .asFunction<jni.JniResult Function(int, int, int)>();

  /// from: public void <init>(int x, int y, int z)
  MainActivity_Coordinate(int x, int y, int z)
      : super.fromRef(_ctor(x, y, z).object);
}
