// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

final jniEnv = jni.Jni.env;
final jniAccessors = jni.Jni.accessors;

/// from: com.github.dart_lang.jnigen.benchmark.MainActivity
class MainActivity extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("com/github/dart_lang/jnigen/benchmark/MainActivity");
  MainActivity.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  MainActivity()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_configureFlutterEngine = jniAccessors.getMethodIDOf(
      _classRef,
      "configureFlutterEngine",
      "(Lio/flutter/embedding/engine/FlutterEngine;)V");

  /// from: public void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine flutterEngine)
  void configureFlutterEngine(jni.JniObject flutterEngine) =>
      jniAccessors.callMethodWithArgs(reference, _id_configureFlutterEngine,
          jni.JniType.voidType, [flutterEngine.reference]).check();

  static final _id_getInteger =
      jniAccessors.getStaticMethodIDOf(_classRef, "getInteger", "()I");

  /// from: static public int getInteger()
  static int getInteger() => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getInteger, jni.JniType.intType, []).integer;

  static final _id_getStringOfLength = jniAccessors.getStaticMethodIDOf(
      _classRef, "getStringOfLength", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String getStringOfLength(int n)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JniString getStringOfLength(int n) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getStringOfLength, jni.JniType.objectType, [n]).object);

  static final _id_getOrigin = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getOrigin",
      "()Lcom/github/dart_lang/jnigen/benchmark/MainActivity\$Coordinate;");

  /// from: static public com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate getOrigin()
  /// The returned object must be deleted after use, by calling the `delete` method.
  static MainActivity_Coordinate getOrigin() =>
      MainActivity_Coordinate.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getOrigin, jni.JniType.objectType, []).object);

  static final _id_getMidPoint = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getMidPoint",
      "(Lcom/github/dart_lang/jnigen/benchmark/MainActivity\$Coordinate;Lcom/github/dart_lang/jnigen/benchmark/MainActivity\$Coordinate;)Lcom/github/dart_lang/jnigen/benchmark/MainActivity\$Coordinate;");

  /// from: static public com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate getMidPoint(com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate a, com.github.dart_lang.jnigen.benchmark.MainActivity.Coordinate b)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static MainActivity_Coordinate getMidPoint(
          MainActivity_Coordinate a, MainActivity_Coordinate b) =>
      MainActivity_Coordinate.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getMidPoint,
          jni.JniType.objectType,
          [a.reference, b.reference]).object);

  static final _id_toUpperCase = jniAccessors.getStaticMethodIDOf(
      _classRef, "toUpperCase", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toUpperCase(java.lang.String text)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JniString toUpperCase(jni.JniString text) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_toUpperCase, jni.JniType.objectType, [text.reference]).object);

  static final _id_max =
      jniAccessors.getStaticMethodIDOf(_classRef, "max", "(IIIIIIII)I");

  /// from: static public int max(int a, int b, int c, int d, int e, int f, int g, int h)
  static int max(int a, int b, int c, int d, int e, int f, int g, int h) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_max,
          jni.JniType.intType, [a, b, c, d, e, f, g, h]).integer;
}

/// from: com.github.dart_lang.jnigen.benchmark.MainActivity$Coordinate
class MainActivity_Coordinate extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf(
      "com/github/dart_lang/jnigen/benchmark/MainActivity\$Coordinate");
  MainActivity_Coordinate.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_x = jniAccessors.getFieldIDOf(_classRef, "x", "I");

  /// from: public int x
  int get x =>
      jniAccessors.getField(reference, _id_x, jni.JniType.intType).integer;

  /// from: public int x
  set x(int value) => jniEnv.SetIntField(reference, _id_x, value);

  static final _id_y = jniAccessors.getFieldIDOf(_classRef, "y", "I");

  /// from: public int y
  int get y =>
      jniAccessors.getField(reference, _id_y, jni.JniType.intType).integer;

  /// from: public int y
  set y(int value) => jniEnv.SetIntField(reference, _id_y, value);

  static final _id_z = jniAccessors.getFieldIDOf(_classRef, "z", "I");

  /// from: public int z
  int get z =>
      jniAccessors.getField(reference, _id_z, jni.JniType.intType).integer;

  /// from: public int z
  set z(int value) => jniEnv.SetIntField(reference, _id_z, value);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(III)V");

  /// from: public void <init>(int x, int y, int z)
  /// The returned object must be deleted after use, by calling the `delete` method.
  MainActivity_Coordinate(int x, int y, int z)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [x, y, z]).object);
}
